// Code generated by MockGen. DO NOT EDIT.
// Source: external/external.go

// Package external is a generated GoMock package.
package external

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockExternal is a mock of External interface.
type MockExternal struct {
	ctrl     *gomock.Controller
	recorder *MockExternalMockRecorder
}

// MockExternalMockRecorder is the mock recorder for MockExternal.
type MockExternalMockRecorder struct {
	mock *MockExternal
}

// NewMockExternal creates a new mock instance.
func NewMockExternal(ctrl *gomock.Controller) *MockExternal {
	mock := &MockExternal{ctrl: ctrl}
	mock.recorder = &MockExternalMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockExternal) EXPECT() *MockExternalMockRecorder {
	return m.recorder
}

// Calculate mocks base method.
func (m *MockExternal) Calculate(x, y int32) int32 {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Calculate", x, y)
	ret0, _ := ret[0].(int32)
	return ret0
}

// Calculate indicates an expected call of Calculate.
func (mr *MockExternalMockRecorder) Calculate(x, y interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Calculate", reflect.TypeOf((*MockExternal)(nil).Calculate), x, y)
}
